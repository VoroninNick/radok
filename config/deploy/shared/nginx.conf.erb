upstream unicorn_<%= fetch(:full_app_name) %> {
  server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

<% if fetch(:enable_ssl) %>
  server {
    listen 80;
    server_name _;
    rewrite ^ https://$host$request_uri? permanent;
  }
<% end %>

server {
  <% if fetch(:enable_ssl) %>
    listen 443;
  <% else %>
    listen 80;
  <% end %>

  server_name <%= fetch(:server_name) %>;
  root <%= fetch(:deploy_to) %>/current/public;
  error_log <%= fetch(:deploy_to) %>/shared/log/nginx_error.log;
  access_log <%= fetch(:deploy_to) %>/shared/log/nginx_access.log;

  <% if fetch(:enable_ssl) %>
    ssl    on;
    ssl_certificate    /etc/nginx/strec/certs/bundle.crt;
    ssl_certificate_key    /etc/nginx/strec/certs/tripoded.key;
  <% end %>

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    <% if fetch(:enable_ssl) %>
      proxy_set_header   X-Forwarded-Proto https;
    <% end %>
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn_<%= fetch(:full_app_name) %>;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
